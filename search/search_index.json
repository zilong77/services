{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Let\u2019s build with Kyronode","text":"<p>Kyronode provides reliable validator and infrastructure services for blockchain networks. Secure. Scalable. Always online.</p>"},{"location":"about/","title":"\ud83d\udc3e About KyroNode","text":"<p>KyroNode adalah node runner dan validator independen yang berfokus pada reliability, performance, dan community support.  </p> <p>Kami aktif berpartisipasi dalam berbagai proyek blockchain berbasis Cosmos SDK, baik mainnet maupun testnet.  </p>"},{"location":"about/#visi-misi","title":"\u2728 Visi &amp; Misi","text":"<ul> <li>Menjadi validator terpercaya dan aman.  </li> <li>Mendukung ekosistem blockchain dengan dokumentasi yang jelas.  </li> <li>Memberikan kontribusi aktif dalam komunitas.  </li> </ul>"},{"location":"about/#contact","title":"\ud83c\udf0d Contact","text":"<ul> <li>Website: kyronode.xyz</li> <li>GitHub: KyroNode</li> <li>Twitter: @KyroNode</li> </ul>"},{"location":"mainnet/_index/","title":"\ud83c\udf10 Mainnet Chains","text":"<p>Daftar dokumentasi untuk semua chain mainnet yang didukung oleh KyroNode.</p>"},{"location":"mainnet/_index/#daftar","title":"\ud83d\udccc Daftar","text":"<ul> <li>Chain1</li> </ul>"},{"location":"mainnet/chain1/cheatsheet/","title":"\ud83d\udcd1 Cheat Sheet - Chain1","text":"<p>Beberapa command penting untuk validator Chain1.</p> <pre><code># cek status service\nsudo systemctl status chain1d\n\n# cek logs\njournalctl -fu chain1d -o cat\n\n# sync info\nchain1d status 2&gt;&amp;1 | jq .SyncInfo\n\n# cek validator info\nchain1d q staking validator &lt;valoper_address&gt;\n</code></pre>"},{"location":"mainnet/chain1/installation/","title":"\ud83d\ude80 Installation - Chain1","text":"<p>Panduan instalasi node untuk Chain1.</p> <pre><code># update packages\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\n# download binary dummy\nwget https://example.com/chain1d -O /usr/local/bin/chain1d\nchmod +x /usr/local/bin/chain1d\n\n# init node\nchain1d init mynode --chain-id chain1-mainnet\n</code></pre>"},{"location":"mainnet/chain1/upgrade/","title":"\u26a1 Upgrade - Chain1","text":"<p>Panduan melakukan upgrade untuk Chain1.</p> <pre><code># stop service\nsudo systemctl stop chain1d\n\n# download versi baru\nwget https://example.com/chain1d-v2 -O /usr/local/bin/chain1d\nchmod +x /usr/local/bin/chain1d\n\n# restart service\nsudo systemctl start chain1d\n</code></pre>"},{"location":"testnet/_index/","title":"\ud83e\uddea Testnet Chains","text":"<p>Daftar dokumentasi untuk semua chain testnet yang didukung oleh KyroNode.</p>"},{"location":"testnet/_index/#daftar","title":"\ud83d\udccc Daftar","text":"<ul> <li>ChainA</li> </ul>"},{"location":"testnet/Kiichain/cheatsheet/","title":"\ud83d\udcd1 Cheat Sheet - ChainA (Testnet)","text":"<p>Beberapa command penting untuk validator ChainA Testnet.</p> <pre><code># cek logs service\njournalctl -fu chainad -o cat\n\n# cek sync\nchainad status 2&gt;&amp;1 | jq .SyncInfo\n\n# cek peers\ncurl -s localhost:26657/net_info | jq .result.peers[]\n</code></pre>"},{"location":"testnet/Kiichain/installation/","title":"\ud83d\ude80 Node Installation Guide","text":"<p>This guide helps you set up and run a Node for the project. \ud83d\udd17 Website | Discord | Twitter</p>"},{"location":"testnet/Kiichain/installation/#recommended-specifications","title":"\ud83d\udccb Recommended Specifications","text":"Component Minimum Recommended CPU 2 Cores 4+ Cores RAM 4 GB 8+ GB Storage 80 GB SSD 200+ GB NVMe OS Ubuntu 20.04+ Ubuntu 22.04"},{"location":"testnet/Kiichain/installation/#install-go-if-you-dont-have-one","title":"Install Go (if you don't have one)","text":"<pre><code>cd $HOME\nVER=\"1.23.8\"\nwget \"https://golang.org/dl/go$VER.linux-amd64.tar.gz\"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf \"go$VER.linux-amd64.tar.gz\"\nrm \"go$VER.linux-amd64.tar.gz\"\n\n[ ! -f ~/.bash_profile ] &amp;&amp; touch ~/.bash_profile\necho \"export PATH=$PATH:/usr/local/go/bin:~/go/bin\" &gt;&gt; ~/.bash_profile\nsource $HOME/.bash_profile\n[ ! -d ~/go/bin ] &amp;&amp; mkdir -p ~/go/bin\n</code></pre>"},{"location":"testnet/Kiichain/installation/#set-environment-variables","title":"Set Environment Variables","text":"<pre><code>echo \"export WALLET=&lt;YOUR_WALLET&gt;\" &gt;&gt; $HOME/.bash_profile\necho \"export MONIKER=&lt;YOUR_MONIKER&gt;\" &gt;&gt; $HOME/.bash_profile\necho \"export APP_CHAIN_ID=&lt;CHAIN_ID&gt;\" &gt;&gt; $HOME/.bash_profile\necho \"export APP_PORT=&lt;CUSTOM_PORT&gt;\" &gt;&gt; $HOME/.bash_profile\nsource $HOME/.bash_profile\n</code></pre>"},{"location":"testnet/Kiichain/installation/#download-binary","title":"Download Binary","text":"<pre><code>cd $HOME\nwget -O $APPD.zip &lt;BINARY_URL&gt;\nunzip $APPD.zip\nrm $APPD.zip\nchmod +x $HOME/$APPD\nsudo mv $HOME/$APPD $HOME/go/bin/\n</code></pre>"},{"location":"testnet/Kiichain/installation/#init-config","title":"Init &amp; Config","text":"<pre><code>$APPD init $MONIKER --chain-id $APP_CHAIN_ID\n$APPD config set client chain-id $APP_CHAIN_ID\n$APPD config set client node tcp://localhost:${APP_PORT}657\n</code></pre>"},{"location":"testnet/Kiichain/installation/#download-genesis-addrbook","title":"Download Genesis &amp; Addrbook","text":"<pre><code>wget -O $APP_HOME/config/genesis.json &lt;GENESIS_URL&gt;\nwget -O $APP_HOME/config/addrbook.json &lt;ADDRBOOK_URL&gt;\n</code></pre>"},{"location":"testnet/Kiichain/installation/#set-seeds-peers","title":"Set Seeds &amp; Peers","text":"<pre><code>SEEDS=\"&lt;SEED_NODE&gt;\"\nPEERS=\"&lt;PEER_NODE1&gt;,&lt;PEER_NODE2&gt;\"\nsed -i -e \"s/^seeds *=.*/seeds = \\\"$SEEDS\\\"/\" $APP_HOME/config/config.toml\nsed -i -e \"s/^persistent_peers *=.*/persistent_peers = \\\"$PEERS\\\"/\" $APP_HOME/config/config.toml\n</code></pre>"},{"location":"testnet/Kiichain/installation/#custom-ports","title":"Custom Ports","text":"<pre><code># app.toml\nsed -i.bak -e \"s%:1317%:${APP_PORT}317%g;\ns%:8080%:${APP_PORT}080%g;\ns%:9090%:${APP_PORT}090%g;\ns%:9091%:${APP_PORT}091%g;\ns%:8545%:${APP_PORT}545%g;\ns%:8546%:${APP_PORT}546%g;\ns%:6065%:${APP_PORT}065%g\" $APP_HOME/config/app.toml\n\n# config.toml\nsed -i.bak -e \"s%:26658%:${APP_PORT}658%g;\ns%:26657%:${APP_PORT}657%g;\ns%:6060%:${APP_PORT}060%g;\ns%:26656%:${APP_PORT}656%g;\ns%^external_address = \\\"\\\"%external_address = \\\"$(wget -qO- eth0.me):${APP_PORT}656\\\"%;\ns%:26660%:${APP_PORT}660%g\" $APP_HOME/config/config.toml\n</code></pre>"},{"location":"testnet/Kiichain/installation/#pruning","title":"Pruning","text":"<pre><code>sed -i -e \"s/^pruning *=.*/pruning = \\\"custom\\\"/\" $APP_HOME/config/app.toml \nsed -i -e \"s/^pruning-keep-recent *=.*/pruning-keep-recent = \\\"100\\\"/\" $APP_HOME/config/app.toml\nsed -i -e \"s/^pruning-interval *=.*/pruning-interval = \\\"10\\\"/\" $APP_HOME/config/app.toml\n</code></pre>"},{"location":"testnet/Kiichain/installation/#min-gas-prometheus-indexer","title":"Min Gas, Prometheus, Indexer","text":"<pre><code>sed -i 's|minimum-gas-prices =.*|minimum-gas-prices = \"&lt;MIN_GAS_PRICE&gt;\"|g' $APP_HOME/config/app.toml\nsed -i -e \"s/prometheus = false/prometheus = true/\" $APP_HOME/config/config.toml\nsed -i -e \"s/^indexer *=.*/indexer = \\\"null\\\"/\" $APP_HOME/config/config.toml\n</code></pre>"},{"location":"testnet/Kiichain/installation/#create-service-file","title":"Create Service File","text":"<pre><code>sudo tee /etc/systemd/system/$APPD.service &gt; /dev/null &lt;&lt;EOF\n[Unit]\nDescription=$APPD Node\nAfter=network-online.target\n[Service]\nUser=$USER\nWorkingDirectory=$APP_HOME\nExecStart=$(which $APPD) start --home $APP_HOME\nRestart=on-failure\nRestartSec=5\nLimitNOFILE=65535\n[Install]\nWantedBy=multi-user.target\nEOF\n</code></pre>"},{"location":"testnet/Kiichain/installation/#start-service","title":"Start Service","text":"<pre><code>sudo systemctl daemon-reload\nsudo systemctl enable $APPD\nsudo systemctl restart $APPD &amp;&amp; sudo journalctl -u $APPD -fo cat\n</code></pre>"},{"location":"testnet/Kiichain/upgrade/","title":"\u26a1 Upgrade - ChainA (Testnet)","text":"<p>Panduan melakukan upgrade untuk ChainA Testnet.</p> <pre><code># stop service\nsudo systemctl stop chainad\n\n# download versi baru\nwget https://example.com/chainad-v2 -O /usr/local/bin/chainad\nchmod +x /usr/local/bin/chainad\n\n# restart service\nsudo systemctl start chainad\n</code></pre>"}]}